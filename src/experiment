#!/usr/bin/env bash

check_dependencies() {
  if ! [ -x "$(command -v dvc)" ]; then
    echo 'To create reproducible experiment you need DVC. Install dependencies using /install.' >&2
    exit 1
  fi
}

create_folders() {
  echo "Setting up folders: $*"
  echo "$@" | xargs mkdir -p
  echo "Folders created successfully"
}

sticker() {
  delim=$1 # join delimiter
  shift
  oldIFS=$IFS # save IFS, the field separator
  IFS=$delim
  result="$*"
  IFS=$oldIFS # restore IFS
  echo "$result"
}

green_message() {
  tput setaf 2
  tput bold
  echo "$1"
  tput sgr0
}

# python main.py --cuda --labels 10 train --hyperparams hyperparameters.json --layers 150 100 50 --where 1 2 3 --type linear --input concatenate --activation Sigmoid --save ../model.pt --tensorboard ../tensorboard --proximity 1.0 --transport 1.0 --norm l2

# Jak przesłać 2x varargsy do train?
# layers potem typ, potem varargs
train() {
  green_message "TRAINING"
  dvc run -f "$1" \
    -d hyperparameters.json \
    -o "$2" \
    python main.py --gpu --labels 10 train --save "$2" \
    --layers "${@:10}" \
    --where "${@:10}" \
    --type "$1" \
    --input "$2" \
    --activation "$3" \
    --save "$4" \
    --tensorboard "$3" \
    --proximity "$7" --transport "$8" --norm "$9" \
    --hyperparams hyperparameters.json
  green_message "TRAINING SUCCESSFUL"
}

record() {
  green_message "RECORDING"
  dvc run -f "$1" \
    -d "$2" \
    -o "$3" \
    python main.py --gpus 0 --labels 10 record --save "$3" \
    --model "$2" --operation "$4"
  green_message "RECORDING SUCCESSFUL"
}

plot() {
  green_message "PLOTTING"
  dvc run -f "$1" \
    -d "$2" \
    -o "$3" \
    python main.py --gpus 0 --labels 10 plot --save "$3" \
    --data "$2"
  green_message "PLOTTING SUCCESSFUL"
}

split() {
  green_message "DIVIDING INTO TASK SPECIFIC MODULES"
  dvc run -f "$1" \
    -d "$2" -d "$3" \
    -o "$4" \
    python main.py --gpus 0 --labels 10 split --save "$4" \
    --data "$2" --model "$3"
  green_message "DIVIDING SUCCESSFUL"
}

score() {
  green_message "SCORING TASK DIVIDED MODELS ACCURACIES..."
  dvc run -d "$1" \
    python main.py --gpus 0 --labels 10 score --models "$1" \
    --hyperparams hyperparameters.json

  green_message "SCORING SUCCESSFUL"
}

###############################################################################
#
#                         DATA AND EXPERIMENTS FOLDER
#
###############################################################################

EXPERIMENTS_PATH="./experiments"

DATA_PATH="$EXPERIMENTS_PATH/data"

# Training folders

TRAIN_DATA="$DATA_PATH/train"
MODEL_DATA="$TRAIN_DATA/model"
TENSORBOARD_DATA="$TRAIN_DATA/tensorboard"

# Recorded data folders

RECORD_DATA="$DATA_PATH/record"
PLOT_DATA="$DATA_PATH/plot"
DIVIDED_MODELS_DATA="$DATA_PATH/divided_models"

check_dependencies
create_folders "$MODEL_DATA" "$TENSORBOARD_DATA" "$RECORD_DATA" "$PLOT_DATA" "$DIVIDED_MODELS_DATA"

###############################################################################
#
#                         EXPERIMENT RELATED NAMING
#
###############################################################################

operation=$1
shift

EXPERIMENT_SPECIFIC=$(sticker "_" "$@" "$operation")
TRAIN_EXPERIMENT_SPECIFIC=$(sticker "_" "$@")

###############################################################################
#
#                         DVC FILES FOR REPRODUCTION
#
###############################################################################

TRAIN_FILE="$EXPERIMENTS_PATH/train_$TRAIN_EXPERIMENT_SPECIFIC.dvc"
RECORD_FILE="$EXPERIMENTS_PATH/record_$EXPERIMENT_SPECIFIC.dvc"
PLOT_FILE="$EXPERIMENTS_PATH/plot_$EXPERIMENT_SPECIFIC.dvc"
DIVIDE_FILE="$EXPERIMENTS_PATH/split_$EXPERIMENT_SPECIFIC.dvc"
SCORE_FILE="$EXPERIMENTS_PATH/score_$EXPERIMENT_SPECIFIC.dvc"

# ARTIFACTS CREATED BY EXPERIMENT

MODEL_FILE="$MODEL_DATA/$TRAIN_EXPERIMENT_SPECIFIC.pt"
TENSORBOARD_FILES="$TENSORBOARD_DATA/$TRAIN_EXPERIMENT_SPECIFIC"
RECORDS="$RECORD_DATA/$EXPERIMENT_SPECIFIC"
PLOTS="$PLOT_DATA/$EXPERIMENT_SPECIFIC"
DIVIDED_MODELS="$DIVIDED_MODELS_DATA/$EXPERIMENT_SPECIFIC"

# RUN EXPERIMENTS

train "$TRAIN_FILE" "$MODEL_FILE" "$TENSORBOARD_FILES" "$@"
record "$RECORD_FILE" "$MODEL_FILE" "$RECORDS" "$operation"
plot "$PLOT_FILE" "$RECORDS" "$PLOTS"
split "$DIVIDE_FILE" "$RECORDS" "$MODEL_FILE" "$DIVIDED_MODELS"
score "$DIVIDED_MODELS"

green_message "EXPERIMENT SUCCESSFUL"
